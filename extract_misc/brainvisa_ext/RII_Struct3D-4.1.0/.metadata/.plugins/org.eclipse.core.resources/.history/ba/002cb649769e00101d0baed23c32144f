<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>RicCorticalThicknessByNormal: src/RicCortialThicknessByNormal.cpp File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>src/RicCortialThicknessByNormal.cpp File Reference</h1><code>#include &lt;string&gt;</code><br>
<code>#include &lt;iostream&gt;</code><br>
<code>#include &lt;algorithm&gt;</code><br>
<code>#include &lt;cstdlib&gt;</code><br>
<code>#include &lt;time.h&gt;</code><br>
<code>#include &lt;tclap/config.h&gt;</code><br>
<code>#include &lt;tclap/CmdLine.h&gt;</code><br>
<code>#include &quot;RicMesh.h&quot;</code><br>
<code>#include &quot;RicTexture.h&quot;</code><br>
<code>#include &quot;TexFill.h&quot;</code><br>
<code>#include &quot;GM_Normal.h&quot;</code><br>
<code>#include &quot;RicUtil.h&quot;</code><br>
<code>#include &quot;RicMatrix.h&quot;</code><br>
<code>#include &quot;RicVolumeSet.h&quot;</code><br>

<p>
<div class="dynheader">
Include dependency graph for RicCortialThicknessByNormal.cpp:</div>
<div class="dynsection">
<p><center><img src="RicCortialThicknessByNormal_8cpp__incl.png" border="0" usemap="#src/RicCortialThicknessByNormal.cpp_map" alt=""></center>
<map name="src/RicCortialThicknessByNormal.cpp_map">
<area shape="rect" href="TexFill_8h&#45;source.html" title="TexFill.h" alt="" coords="851,84,928,111"><area shape="rect" href="GM__Normal_8h&#45;source.html" title="GM_Normal.h" alt="" coords="952,84,1069,111"></map>
</div>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d3fb5eff794166626f5dd02054fb7300"></a><!-- doxytag: member="RicCortialThicknessByNormal.cpp::BRUTE" ref="d3fb5eff794166626f5dd02054fb7300" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>BRUTE</b>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ea949b3fe96724432027802c42911297"></a><!-- doxytag: member="RicCortialThicknessByNormal.cpp::SUBDIVIDE" ref="ea949b3fe96724432027802c42911297" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>SUBDIVIDE</b>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2fcfdf60d28725b11b5a3539d3acd0d4"></a><!-- doxytag: member="RicCortialThicknessByNormal.cpp::THREADS" ref="2fcfdf60d28725b11b5a3539d3acd0d4" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>THREADS</b>&nbsp;&nbsp;&nbsp;3</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="RicCortialThicknessByNormal_8cpp.html#0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Implementation file for gmnormal.cpp (aka RicNormalThickness) Copyright (C) 2007 by Bill Rogers - Research Imaging Center - UTHSCSA<p>
This program determines the thickness between two meshes using a modified brute force method looking for the intersection of a normal from a vertex from one mesh to a triangle in the other mesh. There is a check to make sure that the normal from the first mesh does not intersect itself before intersecting the other mesh.<p>
Limits on the thickness can be specified with min and max values. Thickness values for a vertex outside the limits will be set to zero. In addition, input vertices can be culled by curvature if a white matter curvature map is input as well.<p>
This version will read in a transformation matrix to scale the meshes before calculation of thickness.<p>
Verbose output will output additional meshes to show input mesh surface normals as well as a mesh showing connecting vectors between nearest neighhbor points.<p>
Command line switches<p>
--gm gray matter mesh file (required) --wm white matter mesh file (required) --tm Transformation matrix file name (required) --wc white matter curvature file -o output file base name --mind minimum thickness allowed --maxd maximum thickness allowed --minc minimum curvature allowed --maxc maximum curvature allowed --ft flag for filling invalid nodes in texture --fd radial distance to average for filling texture nodes -m method of calculation (brute, sub, thread) -v verbose output --bv output for BrainVisa <hr><h2>Function Documentation</h2>
<a class="anchor" name="0ddf1224851353fc92bfbff6f499fa97"></a><!-- doxytag: member="RicCortialThicknessByNormal.cpp::main" ref="0ddf1224851353fc92bfbff6f499fa97" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>argv</em>[]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
////////////////////////////////////////////////////////////////////// ////// Use inverse transform to create untransformed mesh ////////// /////// if we have a transformation matrix /////////////////////////<p>
////////////////////////////////////////////////////////////////////// //////////////// First pass with input mesh //////////////////<p>
////////////////////////////// untransform closest vectors //////////////////////////////// We are assuming that by transforming the vectors that connect<p>
Calculate distances between ends of transformed closest vectors to get thickness<p>
////////////////////////////////////////////////////////////////////// //////////////// Calculate stats and histogram ///////////////////// 
</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Mon Jul 14 17:32:15 2008 for RicCorticalThicknessByNormal by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
