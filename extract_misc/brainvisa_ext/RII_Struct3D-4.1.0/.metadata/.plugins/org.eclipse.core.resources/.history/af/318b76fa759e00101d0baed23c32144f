<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>RicVolume: RicVolume Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>RicVolume Class Reference</h1><!-- doxytag: class="RicVolume" --><code>#include &lt;<a class="el" href="RicVolume_8h_source.html">RicVolume.h</a>&gt;</code>
<p>

<p>
<a href="classRicVolume-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#224c921c35b026ebe7939511c226b8c0">RicVolume</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#1b580e333684e8237a55dff014d4d6e7">RicVolume</a> (string filename)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#3bbecae8c7b35498ddca09eba0850330">RicVolume</a> (int <a class="el" href="classRicVolume.html#a8515982cb318b0f49d19a1e588624bf">nx</a>, int <a class="el" href="classRicVolume.html#d19608ec38b8e20f975c9535efea4bb2">ny</a>, int <a class="el" href="classRicVolume.html#c444e5813ac8552ce67bcf1739eb80b9">nz</a>)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#016a82bb6f9b671796e0419c49bd2b8e">RicVolume</a> (int <a class="el" href="classRicVolume.html#a8515982cb318b0f49d19a1e588624bf">nx</a>, int <a class="el" href="classRicVolume.html#d19608ec38b8e20f975c9535efea4bb2">ny</a>, int <a class="el" href="classRicVolume.html#c444e5813ac8552ce67bcf1739eb80b9">nz</a>, float val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#451ebf9d92e4e9f1ff99396159e01d31">~RicVolume</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#ea952ad0065318da0b49017953f3f7ac">Read</a> (string filename)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#a3d1a0e01535bebc5a769a4ccce56cf5">Write</a> (string filename)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#fe5bb8fcaf06ea907abe89d7d007667f">Write_NEMA</a> (string filename)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#1cc3ea1548732395ba099f45ad5744bc">Write_NEMA</a> (string filename, string orient_str)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#3224d9656b27667d943fa03f51d5e70b">operator+</a> (<a class="el" href="classRicVolume.html">RicVolume</a> &amp;rhs)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#6a7dbca71c46410ec4d16a06fe79ce5d">operator-</a> (<a class="el" href="classRicVolume.html">RicVolume</a> &amp;rhs)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#4cb56a0cb7c40a8125eed6e590c31206">operator*</a> (<a class="el" href="classRicVolume.html">RicVolume</a> &amp;rhs)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#fe4e8826465415e993b63ed9daa46d68">operator/</a> (<a class="el" href="classRicVolume.html">RicVolume</a> &amp;rhs)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#21164ded6f70ec0d1e773d5d2faf0d5a">operator+=</a> (const float con)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#54946faa62055a7bc042e8d769f0fe0b">operator-=</a> (const float con)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#64d110f0f03d6d684a4eb873eefeb5c2">operator*=</a> (const float con)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#a19d17631e533533dec073a535fe0d13">operator/=</a> (const float con)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classRicVolume.html">RicVolume</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#d2c73902b20b7cacaf97b798bdd2a097">operator&gt;</a> (const float con)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#41c7e93aed5c8dfcb593e5f9a1beb36a">Init</a> (int <a class="el" href="classRicVolume.html#a8515982cb318b0f49d19a1e588624bf">nx</a>, int <a class="el" href="classRicVolume.html#d19608ec38b8e20f975c9535efea4bb2">ny</a>, int <a class="el" href="classRicVolume.html#c444e5813ac8552ce67bcf1739eb80b9">nz</a>, float val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#a295a62bd40037603389d5363cdb9945">Init</a> (int <a class="el" href="classRicVolume.html#a8515982cb318b0f49d19a1e588624bf">nx</a>, int <a class="el" href="classRicVolume.html#d19608ec38b8e20f975c9535efea4bb2">ny</a>, int <a class="el" href="classRicVolume.html#c444e5813ac8552ce67bcf1739eb80b9">nz</a>)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="83343574ebaaefe4a25acabdc51d39af"></a><!-- doxytag: member="RicVolume::get_numx" ref="83343574ebaaefe4a25acabdc51d39af" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#83343574ebaaefe4a25acabdc51d39af">get_numx</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of x values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="312201b0e7f1e0cb577f7ae308b86ae1"></a><!-- doxytag: member="RicVolume::get_numy" ref="312201b0e7f1e0cb577f7ae308b86ae1" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#312201b0e7f1e0cb577f7ae308b86ae1">get_numy</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of y values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9598ba47fa2f3b189d15ee64ad549cfc"></a><!-- doxytag: member="RicVolume::get_numz" ref="9598ba47fa2f3b189d15ee64ad549cfc" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#9598ba47fa2f3b189d15ee64ad549cfc">get_numz</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of z values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="42a288f778d558098db7fd350ad479da"></a><!-- doxytag: member="RicVolume::num_cols" ref="42a288f778d558098db7fd350ad479da" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#42a288f778d558098db7fd350ad479da">num_cols</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of x values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c6e3f718508534c4fc3c9c742ad68b62"></a><!-- doxytag: member="RicVolume::num_rows" ref="c6e3f718508534c4fc3c9c742ad68b62" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#c6e3f718508534c4fc3c9c742ad68b62">num_rows</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of y values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="decf928997c215c29c3e2dba7ecdcc9a"></a><!-- doxytag: member="RicVolume::num_slices" ref="decf928997c215c29c3e2dba7ecdcc9a" args="()" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#decf928997c215c29c3e2dba7ecdcc9a">num_slices</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns number of z values <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#ec0d153cf82909e49422c35a84d0f20c">CalcMinMaxAvg</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#21695cc6c71315e2d7c7db25191d3947">Fill</a> (float fillval)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#a9f41d2017193d1d1da2adf3c752db60">ThresholdAbove</a> (float threshold, float fillval)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#286d7fb5e434de921187ed7a2af82ea1">ThresholdBelow</a> (float threshold, float fillval)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#6e75da303c66c8540302478bbaf9789e">Copy</a> (<a class="el" href="classRicVolume.html">RicVolume</a> &amp;source)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#fadd7de7a0389aea1ef7db62ae30e5e0">get_6_neighbors</a> (int i, int j, int k, float *buff6)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#21ea05aa0007ea325e3a4d6665d2faaa">get_18_neighbors</a> (int ix, int iy, int iz, float *buff18)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#8edca30a3865718a5f4cd6c48abaeedf">get_26_neighbors</a> (int ix, int iy, int iz, float *buff26)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#07eb424cd773376b0b9f29896d9ea6b8">interp3D</a> (float x, float y, float z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#aaa2d3106619fe604b419c0ea7f0d065">set_at_nearest</a> (float rx, float ry, float rz, float value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#09662fd2600e0f21446699202cd599f6">get_at_index</a> (int i, int j, int k, int flag=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#065ce2448418dbd147490c4917ee5e98">range_checked_get_at_index</a> (int i, int j, int k)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#c26737c6cdddecf4a40b3378d5312f18">set_at_index</a> (int i, int j, int k, float value)</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fa1c17f93475eec2f28c459d37ed1932"></a><!-- doxytag: member="RicVolume::vox" ref="fa1c17f93475eec2f28c459d37ed1932" args="" -->
float ***&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#fa1c17f93475eec2f28c459d37ed1932">vox</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">voxel matrix <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="08c027ea63fcd7c8a4d0987e42507b28"></a><!-- doxytag: member="RicVolume::varray" ref="08c027ea63fcd7c8a4d0987e42507b28" args="" -->
float *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#08c027ea63fcd7c8a4d0987e42507b28">varray</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">pointer to first element of voxel matrix <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6d8f6631c4239c9fe4dc376c81b0db71"></a><!-- doxytag: member="RicVolume::min" ref="6d8f6631c4239c9fe4dc376c81b0db71" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#6d8f6631c4239c9fe4dc376c81b0db71">min</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">minimum voxel value <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="02deab5b8793df5aca16c2b61514064b"></a><!-- doxytag: member="RicVolume::max" ref="02deab5b8793df5aca16c2b61514064b" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#02deab5b8793df5aca16c2b61514064b">max</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">maximum voxel value <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ddbe9a36208dff6781e30d41a284f902"></a><!-- doxytag: member="RicVolume::avg" ref="ddbe9a36208dff6781e30d41a284f902" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#ddbe9a36208dff6781e30d41a284f902">avg</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">average voxel value <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d5a13347e731c34e062ff4a82f18ff8b"></a><!-- doxytag: member="RicVolume::dx" ref="d5a13347e731c34e062ff4a82f18ff8b" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#d5a13347e731c34e062ff4a82f18ff8b">dx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">spacing along x axis <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c19ae950eb3fbc72a46035667a30bae6"></a><!-- doxytag: member="RicVolume::dy" ref="c19ae950eb3fbc72a46035667a30bae6" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#c19ae950eb3fbc72a46035667a30bae6">dy</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">spacing along y axis <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="44e60f605b0f81f438fa84b9b17b0690"></a><!-- doxytag: member="RicVolume::dz" ref="44e60f605b0f81f438fa84b9b17b0690" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#44e60f605b0f81f438fa84b9b17b0690">dz</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">spacing along z axis <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8688ff619a933bf0fad8ed85edcbafef"></a><!-- doxytag: member="RicVolume::xoffset" ref="8688ff619a933bf0fad8ed85edcbafef" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#8688ff619a933bf0fad8ed85edcbafef">xoffset</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Talairach x offset. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d1d543553124bfde14a8ba2cb5ad2993"></a><!-- doxytag: member="RicVolume::yoffset" ref="d1d543553124bfde14a8ba2cb5ad2993" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#d1d543553124bfde14a8ba2cb5ad2993">yoffset</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Talairach y offset. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="917dec8dc0aa2454e97c1eef5aecef4b"></a><!-- doxytag: member="RicVolume::zoffset" ref="917dec8dc0aa2454e97c1eef5aecef4b" args="" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#917dec8dc0aa2454e97c1eef5aecef4b">zoffset</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Talairach z offset. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f8609cd608faa735b67215919055e04e"></a><!-- doxytag: member="RicVolume::nvox" ref="f8609cd608faa735b67215919055e04e" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#f8609cd608faa735b67215919055e04e">nvox</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">total number of voxels <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a8515982cb318b0f49d19a1e588624bf"></a><!-- doxytag: member="RicVolume::nx" ref="a8515982cb318b0f49d19a1e588624bf" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#a8515982cb318b0f49d19a1e588624bf">nx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">number of z values in volume (columns per row) <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d19608ec38b8e20f975c9535efea4bb2"></a><!-- doxytag: member="RicVolume::ny" ref="d19608ec38b8e20f975c9535efea4bb2" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#d19608ec38b8e20f975c9535efea4bb2">ny</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">number of y values in volume (rows per slice) <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c444e5813ac8552ce67bcf1739eb80b9"></a><!-- doxytag: member="RicVolume::nz" ref="c444e5813ac8552ce67bcf1739eb80b9" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#c444e5813ac8552ce67bcf1739eb80b9">nz</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">number of x values in volume (slices) <br></td></tr>
<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3d8296ec1abec1c67d01b5e64b4dd90b"></a><!-- doxytag: member="RicVolume::RicVolumeSet" ref="3d8296ec1abec1c67d01b5e64b4dd90b" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRicVolume.html#3d8296ec1abec1c67d01b5e64b4dd90b">RicVolumeSet</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The voxel data is stored in a three dimensional array where the origin, index [0][0][0], is located at the left, anterior, superior. In other words, the array start at the top, left, front of the head. This corresponds to a NEMA orientation string of XYZ---.<p>
Each voxel consists of a floating point intensity value. The are overloads of common arithmatic operators so whole volumes can be operated on.<p>
Copyright (C) 2007 by Bill Rogers - Research Imaging Center - UTHSCSA <a href="mailto:rogers@uthscsa.edu">rogers@uthscsa.edu</a> <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="224c921c35b026ebe7939511c226b8c0"></a><!-- doxytag: member="RicVolume::RicVolume" ref="224c921c35b026ebe7939511c226b8c0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RicVolume::RicVolume           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for empty volume 
</div>
</div><p>
<a class="anchor" name="1b580e333684e8237a55dff014d4d6e7"></a><!-- doxytag: member="RicVolume::RicVolume" ref="1b580e333684e8237a55dff014d4d6e7" args="(string filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RicVolume::RicVolume           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for volume to be read in from file. If more than one volume is in the file then all be the first will be discarded.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>Name of file containing a volume </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="3bbecae8c7b35498ddca09eba0850330"></a><!-- doxytag: member="RicVolume::RicVolume" ref="3bbecae8c7b35498ddca09eba0850330" args="(int nx, int ny, int nz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RicVolume::RicVolume           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor to make a volume with all voxel values set to zero<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nx</em>&nbsp;</td><td>Number of x values in volume (columns in a row)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ny</em>&nbsp;</td><td>Number of y values in volume (rows in a slice)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nz</em>&nbsp;</td><td>Number of z values in volume (slices) </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="016a82bb6f9b671796e0419c49bd2b8e"></a><!-- doxytag: member="RicVolume::RicVolume" ref="016a82bb6f9b671796e0419c49bd2b8e" args="(int nx, int ny, int nz, float val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RicVolume::RicVolume           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>val</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor to make a volume with all voxel values set to the passed value<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nx</em>&nbsp;</td><td>Number of x values in volume (columns in a row)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ny</em>&nbsp;</td><td>Number of y values in volume (rows in a slice)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nz</em>&nbsp;</td><td>Number of z values in volume (slices)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>val</em>&nbsp;</td><td>Value to set all voxel intensity values to </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="451ebf9d92e4e9f1ff99396159e01d31"></a><!-- doxytag: member="RicVolume::~RicVolume" ref="451ebf9d92e4e9f1ff99396159e01d31" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RicVolume::~RicVolume           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor for <a class="el" href="classRicVolume.html">RicVolume</a> 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ec0d153cf82909e49422c35a84d0f20c"></a><!-- doxytag: member="RicVolume::CalcMinMaxAvg" ref="ec0d153cf82909e49422c35a84d0f20c" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RicVolume::CalcMinMaxAvg           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function calculates the min, max, and average voxel values for a volume 
</div>
</div><p>
<a class="anchor" name="6e75da303c66c8540302478bbaf9789e"></a><!-- doxytag: member="RicVolume::Copy" ref="6e75da303c66c8540302478bbaf9789e" args="(RicVolume &amp;source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RicVolume::Copy           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>source</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy from the source volume duplicating all setting and values.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>source</em>&nbsp;</td><td>Source volume to copy from </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="21695cc6c71315e2d7c7db25191d3947"></a><!-- doxytag: member="RicVolume::Fill" ref="21695cc6c71315e2d7c7db25191d3947" args="(float fillval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RicVolume::Fill           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>fillval</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function fills a volume with the passed value<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fillval</em>&nbsp;</td><td>Intensity value to store in all voxel locations </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="21ea05aa0007ea325e3a4d6665d2faaa"></a><!-- doxytag: member="RicVolume::get_18_neighbors" ref="21ea05aa0007ea325e3a4d6665d2faaa" args="(int ix, int iy, int iz, float *buff18)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::get_18_neighbors           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&nbsp;</td>
          <td class="paramname"> <em>buff18</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Fills d18_buff ordered as follows: slice iz-1 point (ix-1,iy) first then clockwise around but skipping the corners and lastly the center point of iz-1. Then slice iz - will all values except (ix,iy,iz). Then iz+1 same order as iz-1. If the input indicies are such that all values will not be in bounds then zero is returned, else 1 is returned on success. 
</div>
</div><p>
<a class="anchor" name="8edca30a3865718a5f4cd6c48abaeedf"></a><!-- doxytag: member="RicVolume::get_26_neighbors" ref="8edca30a3865718a5f4cd6c48abaeedf" args="(int ix, int iy, int iz, float *buff26)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::get_26_neighbors           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&nbsp;</td>
          <td class="paramname"> <em>buff26</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Fills d26_buff ordered as follows: slice iz-1 point (x-1,y-1) first then clockwise around and lastly the center point of iz-1. Then slice iz - same order but not (ix,iy,iz). Then iz+1 same order as iz-1. If the input indicies are such that all values will not be in bounds then zero is returned, else 1 is returned on success. 
</div>
</div><p>
<a class="anchor" name="fadd7de7a0389aea1ef7db62ae30e5e0"></a><!-- doxytag: member="RicVolume::get_6_neighbors" ref="fadd7de7a0389aea1ef7db62ae30e5e0" args="(int i, int j, int k, float *buff6)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::get_6_neighbors           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&nbsp;</td>
          <td class="paramname"> <em>buff6</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Fills f6_buff with the values of the 6 non-diagonal adjacent pixel. They will be ordered as follows: Positive X neighbor, Negative X neighbor, +Y, -Y, +Z, -Z. If the input indicies are such that all values will not be in bounds then<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ix</em>&nbsp;</td><td>x index</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>iy</em>&nbsp;</td><td>y index</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>iz</em>&nbsp;</td><td>z index</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buff6</em>&nbsp;</td><td>buffer to store neighboring voxel values in</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>zero is returned, else 1 is returned on success. </dd></dl>

</div>
</div><p>
<a class="anchor" name="09662fd2600e0f21446699202cd599f6"></a><!-- doxytag: member="RicVolume::get_at_index" ref="09662fd2600e0f21446699202cd599f6" args="(int i, int j, int k, int flag=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float RicVolume::get_at_index           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flag</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Where ix, iy, and iz are column, row, and slice indices. The voxel value at those indices is returned. 
</div>
</div><p>
<a class="anchor" name="a295a62bd40037603389d5363cdb9945"></a><!-- doxytag: member="RicVolume::Init" ref="a295a62bd40037603389d5363cdb9945" args="(int nx, int ny, int nz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Init           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialization function that allocates memory for a volume and fills it with zeros<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nx</em>&nbsp;</td><td>Number of x values in volume (columns in a row)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ny</em>&nbsp;</td><td>Number of y values in volume (rows in a slice)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nz</em>&nbsp;</td><td>Number of z values in volume (slices)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<a class="anchor" name="41c7e93aed5c8dfcb593e5f9a1beb36a"></a><!-- doxytag: member="RicVolume::Init" ref="41c7e93aed5c8dfcb593e5f9a1beb36a" args="(int nx, int ny, int nz, float val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Init           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>numx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>numy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>numz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>val</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialization function that allocates memory for a volume and fills it with the passed value<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>numx</em>&nbsp;</td><td>Number of x values in volume (columns in a row)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numy</em>&nbsp;</td><td>Number of y values in volume (rows in a slice)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numz</em>&nbsp;</td><td>Number of z values in volume (slices)</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>val</em>&nbsp;</td><td>Value to assign to all voxel intensity values</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<a class="anchor" name="07eb424cd773376b0b9f29896d9ea6b8"></a><!-- doxytag: member="RicVolume::interp3D" ref="07eb424cd773376b0b9f29896d9ea6b8" args="(float x, float y, float z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float RicVolume::interp3D           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Use trilinear interpolation to calculate the intensity level at the past x,y,z volume location. Values are ranged checked to make sure the x,y,z location is in the volume. The interpolated intensity level is returned on success. Zero is return if the location is out of range. Note - The passed x,y,z location is in real space and is converted to voxel space by dividing by the x,y,z voxel size. 
</div>
</div><p>
<a class="anchor" name="4cb56a0cb7c40a8125eed6e590c31206"></a><!-- doxytag: member="RicVolume::operator*" ref="4cb56a0cb7c40a8125eed6e590c31206" args="(RicVolume &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator*           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>rhs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator * overload - multiply voxels from the passed volume and this one 
</div>
</div><p>
<a class="anchor" name="64d110f0f03d6d684a4eb873eefeb5c2"></a><!-- doxytag: member="RicVolume::operator*=" ref="64d110f0f03d6d684a4eb873eefeb5c2" args="(const float con)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator*=           </td>
          <td>(</td>
          <td class="paramtype">const float&nbsp;</td>
          <td class="paramname"> <em>con</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operater *= overload - multiply every voxel in a volume by a constant value 
</div>
</div><p>
<a class="anchor" name="3224d9656b27667d943fa03f51d5e70b"></a><!-- doxytag: member="RicVolume::operator+" ref="3224d9656b27667d943fa03f51d5e70b" args="(RicVolume &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator+           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>rhs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator + overload - add each voxel from one volume to another 
</div>
</div><p>
<a class="anchor" name="21164ded6f70ec0d1e773d5d2faf0d5a"></a><!-- doxytag: member="RicVolume::operator+=" ref="21164ded6f70ec0d1e773d5d2faf0d5a" args="(const float con)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator+=           </td>
          <td>(</td>
          <td class="paramtype">const float&nbsp;</td>
          <td class="paramname"> <em>con</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator += overload - add a constant value to every voxel in a volume 
</div>
</div><p>
<a class="anchor" name="6a7dbca71c46410ec4d16a06fe79ce5d"></a><!-- doxytag: member="RicVolume::operator&#45;" ref="6a7dbca71c46410ec4d16a06fe79ce5d" args="(RicVolume &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator-           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>rhs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator - overload - subtract voxels from the passed volume from this one 
</div>
</div><p>
<a class="anchor" name="54946faa62055a7bc042e8d769f0fe0b"></a><!-- doxytag: member="RicVolume::operator&#45;=" ref="54946faa62055a7bc042e8d769f0fe0b" args="(const float con)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator-=           </td>
          <td>(</td>
          <td class="paramtype">const float&nbsp;</td>
          <td class="paramname"> <em>con</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator -= overload - subtract a constant value from every voxel in a volume 
</div>
</div><p>
<a class="anchor" name="fe4e8826465415e993b63ed9daa46d68"></a><!-- doxytag: member="RicVolume::operator/" ref="fe4e8826465415e993b63ed9daa46d68" args="(RicVolume &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator/           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRicVolume.html">RicVolume</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>rhs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator / overload - divide voxels from the passed volume from this one There is no checking for divide by zero so use cautiously 
</div>
</div><p>
<a class="anchor" name="a19d17631e533533dec073a535fe0d13"></a><!-- doxytag: member="RicVolume::operator/=" ref="a19d17631e533533dec073a535fe0d13" args="(const float con)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> &amp; RicVolume::operator/=           </td>
          <td>(</td>
          <td class="paramtype">const float&nbsp;</td>
          <td class="paramname"> <em>con</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operater /= overload - divide every voxel in a volume by a constant value 
</div>
</div><p>
<a class="anchor" name="d2c73902b20b7cacaf97b798bdd2a097"></a><!-- doxytag: member="RicVolume::operator&gt;" ref="d2c73902b20b7cacaf97b798bdd2a097" args="(const float con)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRicVolume.html">RicVolume</a> * RicVolume::operator&gt;           </td>
          <td>(</td>
          <td class="paramtype">const float&nbsp;</td>
          <td class="paramname"> <em>thresh</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator &gt; overload - produces a new volume with voxels set to 1 where the original volume is greater than the passed threshold value and 0 elsewhere 
</div>
</div><p>
<a class="anchor" name="065ce2448418dbd147490c4917ee5e98"></a><!-- doxytag: member="RicVolume::range_checked_get_at_index" ref="065ce2448418dbd147490c4917ee5e98" args="(int i, int j, int k)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float RicVolume::range_checked_get_at_index           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Where ix, iy, and iz are column, row, and slice indices. The voxel value at those indices is returned. 
</div>
</div><p>
<a class="anchor" name="ea952ad0065318da0b49017953f3f7ac"></a><!-- doxytag: member="RicVolume::Read" ref="ea952ad0065318da0b49017953f3f7ac" args="(string filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Read           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Function to read a volume from a file. If there is more than one volume in the file then all be the first will be discarded. The file extension will determine what kind of file it is.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>Name of file to read volume from</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<a class="anchor" name="c26737c6cdddecf4a40b3378d5312f18"></a><!-- doxytag: member="RicVolume::set_at_index" ref="c26737c6cdddecf4a40b3378d5312f18" args="(int i, int j, int k, float value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::set_at_index           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Where ix, iy, and iz are column, row, and slice indices. The voxel value at those indices is set to the passed value. If the indices are out of range then zero is returned. 1 is returned on success. 
</div>
</div><p>
<a class="anchor" name="aaa2d3106619fe604b419c0ea7f0d065"></a><!-- doxytag: member="RicVolume::set_at_nearest" ref="aaa2d3106619fe604b419c0ea7f0d065" args="(float rx, float ry, float rz, float value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::set_at_nearest           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Where rx, ry, and rz make up a vertex in real space. The voxel value at that location is set to the passed value. If the indices are out of range then zero is returned. 1 is returned on success. 
</div>
</div><p>
<a class="anchor" name="a9f41d2017193d1d1da2adf3c752db60"></a><!-- doxytag: member="RicVolume::ThresholdAbove" ref="a9f41d2017193d1d1da2adf3c752db60" args="(float threshold, float fillval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RicVolume::ThresholdAbove           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>fillval</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function sets all voxels in a volume that have a value that is above the threshold value to the passed fill value<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>threshold</em>&nbsp;</td><td>Threshold value for voxels</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fillval</em>&nbsp;</td><td>Intensity value to store in all voxel locations </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="286d7fb5e434de921187ed7a2af82ea1"></a><!-- doxytag: member="RicVolume::ThresholdBelow" ref="286d7fb5e434de921187ed7a2af82ea1" args="(float threshold, float fillval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RicVolume::ThresholdBelow           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>fillval</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function sets all voxels in a volume that have a value that is below the threshold value to the passed fill value<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>threshold</em>&nbsp;</td><td>Threshold value for voxels</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fillval</em>&nbsp;</td><td>Intensity value to store in all voxel locations </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="a3d1a0e01535bebc5a769a4ccce56cf5"></a><!-- doxytag: member="RicVolume::Write" ref="a3d1a0e01535bebc5a769a4ccce56cf5" args="(string filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Write           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Function to write a volume to a file. The file extension will determine what kind of file is written (i.e. dim, des, nii). If no extension is given then the NEMA format will be used.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>Name of file to write to</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<a class="anchor" name="1cc3ea1548732395ba099f45ad5744bc"></a><!-- doxytag: member="RicVolume::Write_NEMA" ref="1cc3ea1548732395ba099f45ad5744bc" args="(string filename, string orient_str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Write_NEMA           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>orient_str</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Function to write a volume to a NEMA file. .<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>Name of file to write to</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<a class="anchor" name="fe5bb8fcaf06ea907abe89d7d007667f"></a><!-- doxytag: member="RicVolume::Write_NEMA" ref="fe5bb8fcaf06ea907abe89d7d007667f" args="(string filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RicVolume::Write_NEMA           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Function to write a volume to a NEMA file. .<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>Name of file to write to</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success, 0 on failure </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>src/<a class="el" href="RicVolume_8h_source.html">RicVolume.h</a><li>src/<a class="el" href="RicVolume_8cpp.html">RicVolume.cpp</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small><a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> </small></address>
</body>
</html>
