<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>RicUtil: src/RicUtil.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>src/RicUtil.h</h1><a href="RicUtil_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* ---------------------------- RicUtil.h ---------------------------- */</span>
<a name="l00011"></a>00011 <span class="preprocessor">#if !defined (_RICUTIL_H)</span>
<a name="l00012"></a>00012 <span class="preprocessor"></span><span class="preprocessor">#define _RICUTIL_H 1</span>
<a name="l00013"></a>00013 <span class="preprocessor"></span>
<a name="l00014"></a>00014 <span class="preprocessor">#include "RicPoint.h"</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include "RicMatrix.h"</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#define MAX_STR                 256</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="comment">//#define MSIZE 32</span>
<a name="l00020"></a>00020 <span class="preprocessor">#define PI              3.14159265358979323846f</span>
<a name="l00021"></a><a class="code" href="RicUtil_8h.html#06e28c801ea48dde51889eb3c4836c78">00021</a> <span class="preprocessor"></span><span class="preprocessor">#define DTOR                    PI/180.0f               </span>
<a name="l00022"></a><a class="code" href="RicUtil_8h.html#3f9d9f3a98c4f2a91903545c72c7e12c">00022</a> <span class="preprocessor">#define RTOD                    180.0f/PI               </span>
<a name="l00023"></a><a class="code" href="RicUtil_8h.html#86b7b8e83f31c708429ce71bf3dcf8b1">00023</a> <span class="preprocessor">#define MM_PER_IN               25.4f                   </span>
<a name="l00024"></a><a class="code" href="RicUtil_8h.html#c286b294f77050ea6433e9c6797e3c9e">00024</a> <span class="preprocessor">#define IN_PER_MM               1.0f/MM_PER_IN  </span>
<a name="l00025"></a><a class="code" href="RicUtil_8h.html#1bf02741902053ef14c10cef474bcfc2">00025</a> <span class="preprocessor">#define IN_PER_CM               10.0f*IN_PER_MM </span>
<a name="l00026"></a><a class="code" href="RicUtil_8h.html#534c6b8944f75edeb5e0611815d9592a">00026</a> <span class="preprocessor">#define ERRVAL (float)9999 </span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="keywordtype">void</span> <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a>(<span class="keywordtype">char</span> *msg);
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="comment">// typedefs</span>
<a name="l00032"></a>00032 
<a name="l00035"></a>00035 <span class="comment">//typedef struct { float x; float y; float z; }  Point;</span>
<a name="l00039"></a>00039 <span class="comment"></span><span class="comment">// typedef struct { double x; double y; double z;} DPoint;      </span>
<a name="l00040"></a>00040 
<a name="l00042"></a><a class="code" href="structCylind.html">00042</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">float</span> r; <span class="keywordtype">float</span> theta; <span class="keywordtype">float</span> z; } <a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a>; 
<a name="l00044"></a><a class="code" href="structICyl.html">00044</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">int</span> r; <span class="keywordtype">int</span> theta; <span class="keywordtype">int</span> z; } <a class="code" href="structICyl.html" title="3d cylindrical point - integer">ICyl</a>; 
<a name="l00046"></a><a class="code" href="structDCylind.html">00046</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">double</span> r; <span class="keywordtype">double</span> theta; <span class="keywordtype">double</span> z; } <a class="code" href="structDCylind.html" title="3d cylindrical point - double">DCylind</a>; 
<a name="l00047"></a>00047 
<a name="l00049"></a><a class="code" href="structSphere.html">00049</a> <span class="keyword">typedef</span> <span class="keyword">struct  </span>{       <span class="keywordtype">float</span> r; <span class="keywordtype">float</span> theta; <span class="keywordtype">float</span> phi; } <a class="code" href="structSphere.html" title="3d point in spherical coordinates">Sphere</a>; 
<a name="l00050"></a>00050 <span class="keyword">typedef</span> <span class="keyword">struct  </span>{       <span class="keywordtype">double</span> r; <span class="keywordtype">double</span> theta; <span class="keywordtype">double</span> phi; } DSphere; 
<a name="l00051"></a>00051 
<a name="l00053"></a><a class="code" href="RicUtil_8h.html#6960a95f0f447dc75d90d9f3995a200e">00053</a> <span class="keyword">typedef</span> <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a>;
<a name="l00054"></a>00054 
<a name="l00056"></a><a class="code" href="structComplex.html">00056</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">float</span> re, im;} <a class="code" href="structComplex.html" title="complex number">Complex</a>;
<a name="l00057"></a>00057 
<a name="l00059"></a><a class="code" href="structvertx.html">00059</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">int</span> slice,pro; } <a class="code" href="structvertx.html" title="vertex on surface">vertx</a>; 
<a name="l00060"></a>00060 <span class="comment">//typedef struct { int slice,pro; } Vertex; </span>
<a name="l00061"></a>00061 
<a name="l00063"></a><a class="code" href="structTriangle.html">00063</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p[3]; } <a class="code" href="structTriangle.html" title="triangle structure">Triangle</a>;
<a name="l00064"></a>00064 
<a name="l00066"></a><a class="code" href="structColor.html">00066</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>{ <span class="keywordtype">float</span> r; <span class="keywordtype">float</span> g; <span class="keywordtype">float</span> b; } <a class="code" href="structColor.html" title="color structure">Color</a>;
<a name="l00067"></a>00067 
<a name="l00069"></a><a class="code" href="classRotate.html">00069</a> <span class="keyword">class </span><a class="code" href="classRotate.html" title="class for rotating points about an axis">Rotate</a>
<a name="l00070"></a>00070 {
<a name="l00071"></a>00071 <span class="keyword">private</span>:
<a name="l00072"></a>00072         
<a name="l00073"></a>00073         <span class="keywordtype">float</span> angle;    
<a name="l00074"></a>00074         <span class="comment">// point to rotate about</span>
<a name="l00075"></a>00075         <span class="keywordtype">float</span> px,py,pz; 
<a name="l00076"></a>00076         <span class="comment">// vector for rotation axis</span>
<a name="l00077"></a>00077         <span class="keywordtype">float</span> vx,vy,vz; 
<a name="l00078"></a>00078         <span class="comment">// variables for transformation matrix</span>
<a name="l00079"></a>00079         <span class="keywordtype">float</span> r11, r12, r13, r21, r22, r23,r31, r32, r33, r41, r42, r43;
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="keyword">public</span>:
<a name="l00082"></a>00082         <span class="keywordtype">void</span> <a class="code" href="classRotate.html#b3584cdf7f81c7c4a0638fcd7634e726">InitRotate</a>(<span class="keywordtype">float</span> px, <span class="keywordtype">float</span> py, <span class="keywordtype">float</span> pz, <span class="keywordtype">float</span> vx, <span class="keywordtype">float</span> vy,
<a name="l00083"></a>00083                 <span class="keywordtype">float</span> vz, <span class="keywordtype">float</span> angle);
<a name="l00084"></a>00084         <span class="keywordtype">void</span> <a class="code" href="classRotate.html#005b02b3de56a667775466ba91c4afd6">RotateIt</a>(<span class="keywordtype">float</span> *x, <span class="keywordtype">float</span> *y, <span class="keywordtype">float</span> *z);
<a name="l00085"></a>00085         <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="classRotate.html#005b02b3de56a667775466ba91c4afd6">RotateIt</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> pnt);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 };
<a name="l00088"></a>00088 
<a name="l00090"></a>00090 <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;
<a name="l00091"></a><a class="code" href="RicUtil_8h.html#a8e397f3db92c4658e0be342957018f2">00091</a> <span class="keywordtype">int</span> <a class="code" href="RicUtil_8h.html#a8e397f3db92c4658e0be342957018f2" title="Template version of 2D matrix memory allocation routines.">matrix</a>(T*** mat, <span class="keywordtype">int</span> nrow, <span class="keywordtype">int</span> ncol)
<a name="l00092"></a>00092 {
<a name="l00093"></a>00093         <span class="comment">// allocate pointers for the start of each row</span>
<a name="l00094"></a>00094         T** m;
<a name="l00095"></a>00095         m = <span class="keyword">new</span> T *[nrow];
<a name="l00096"></a>00096         <span class="keywordflow">if</span> (!m) 
<a name="l00097"></a>00097         {
<a name="l00098"></a>00098                 <span class="keywordtype">char</span> mes[MAX_STR];
<a name="l00099"></a>00099                 sprintf (mes, <span class="stringliteral">"couldn't allocate %d elements in matrix(1)"</span>,
<a name="l00100"></a>00100                 nrow * <span class="keyword">sizeof</span> (<span class="keywordtype">float</span> *));
<a name="l00101"></a>00101                 <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a> (mes);
<a name="l00102"></a>00102                 <span class="keywordflow">return</span> 0;
<a name="l00103"></a>00103         }
<a name="l00104"></a>00104 
<a name="l00105"></a>00105         <span class="comment">// allocate linear array for all points</span>
<a name="l00106"></a>00106         T* tmp;
<a name="l00107"></a>00107         tmp = <span class="keyword">new</span> T[nrow*ncol];
<a name="l00108"></a>00108         <span class="keywordflow">if</span> (!tmp) {
<a name="l00109"></a>00109                 <span class="keywordtype">char</span> mes[MAX_STR];
<a name="l00110"></a>00110                 sprintf (mes, <span class="stringliteral">"couldn't allocate %d elements in matrix(2)"</span>,
<a name="l00111"></a>00111                 nrow * ncol * <span class="keyword">sizeof</span> (<span class="keywordtype">float</span>));
<a name="l00112"></a>00112                 <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a> (mes);
<a name="l00113"></a>00113                 <span class="keywordflow">return</span> 0;
<a name="l00114"></a>00114         }
<a name="l00115"></a>00115         <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=0 ; i&lt;nrow ; i++) m[i]= &amp;tmp[i*ncol];
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         *mat = m;
<a name="l00118"></a>00118 
<a name="l00119"></a>00119         <span class="keywordflow">return</span> 1;
<a name="l00120"></a>00120 }
<a name="l00121"></a>00121 
<a name="l00123"></a>00123 <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;
<a name="l00124"></a><a class="code" href="RicUtil_8h.html#80f029170299baf99a889fec097c019f">00124</a> <span class="keywordtype">void</span> <a class="code" href="RicUtil_8h.html#80f029170299baf99a889fec097c019f" title="Template version of 2D matrix memory free routines.">free_matrix</a>(T **m)
<a name="l00125"></a>00125 {
<a name="l00126"></a>00126         <span class="comment">// first free linear array </span>
<a name="l00127"></a>00127         <span class="keyword">delete</span> m[0];
<a name="l00128"></a>00128         
<a name="l00129"></a>00129         <span class="comment">// free the array of pointers </span>
<a name="l00130"></a>00130         <span class="keyword">delete</span> m;
<a name="l00131"></a>00131 }
<a name="l00132"></a>00132 
<a name="l00134"></a>00134 <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;
<a name="l00135"></a><a class="code" href="RicUtil_8h.html#0c8e258343ee1e74b3f9d6da8889074e">00135</a>                 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8h.html#0c8e258343ee1e74b3f9d6da8889074e" title="Template version of 3D matrix memory allocation routines.">matrix3D</a>(T**** mat, <span class="keywordtype">int</span> nslice, <span class="keywordtype">int</span> nrow, <span class="keywordtype">int</span> ncol)
<a name="l00136"></a>00136 {
<a name="l00137"></a>00137         <span class="keywordtype">int</span> i,j;
<a name="l00138"></a>00138         <span class="keywordtype">char</span> mes[MAX_STR];
<a name="l00139"></a>00139         
<a name="l00140"></a>00140         <span class="comment">// allocate pointers for the start of each slice</span>
<a name="l00141"></a>00141         T*** m;
<a name="l00142"></a>00142         m = <span class="keyword">new</span> T **[nslice];
<a name="l00143"></a>00143         <span class="keywordflow">if</span> (!m) 
<a name="l00144"></a>00144         {
<a name="l00145"></a>00145                 sprintf (mes, <span class="stringliteral">"couldn't allocate %d elements in matrix3D(0)"</span>,
<a name="l00146"></a>00146                                  nslice);
<a name="l00147"></a>00147                 <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a> (mes);
<a name="l00148"></a>00148                 <span class="keywordflow">return</span> 0;
<a name="l00149"></a>00149         }
<a name="l00150"></a>00150                         
<a name="l00151"></a>00151         <span class="comment">// allocate pointers for the start of each row</span>
<a name="l00152"></a>00152         T** rp;
<a name="l00153"></a>00153         rp = <span class="keyword">new</span> T *[nslice*nrow];
<a name="l00154"></a>00154         <span class="keywordflow">if</span> (!rp) 
<a name="l00155"></a>00155         {
<a name="l00156"></a>00156                 sprintf (mes, <span class="stringliteral">"couldn't allocate %d elements in matrix3D(1)"</span>,
<a name="l00157"></a>00157                                  nrow);
<a name="l00158"></a>00158                 <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a> (mes);
<a name="l00159"></a>00159                 <span class="keywordflow">return</span> 0;
<a name="l00160"></a>00160         }
<a name="l00161"></a>00161         <span class="keywordflow">for</span> ( i=0 ; i&lt;nslice ; ++i ) m[i] = &amp;rp[i*nrow];
<a name="l00162"></a>00162 
<a name="l00163"></a>00163         <span class="comment">// allocate linear array for all points</span>
<a name="l00164"></a>00164         T* rc;
<a name="l00165"></a>00165         rc = <span class="keyword">new</span> T[nslice*nrow*ncol];
<a name="l00166"></a>00166         <span class="keywordflow">if</span> (!rc) {
<a name="l00167"></a>00167                 sprintf (mes, <span class="stringliteral">"couldn't allocate %d elements in matrix3D(2)"</span>,
<a name="l00168"></a>00168                                  ncol);
<a name="l00169"></a>00169                 <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a> (mes);
<a name="l00170"></a>00170                 <span class="keywordflow">return</span> 0;
<a name="l00171"></a>00171         }
<a name="l00172"></a>00172         <span class="keywordflow">for</span>( i=0 ; i&lt;nslice ; i++)
<a name="l00173"></a>00173                 <span class="keywordflow">for</span> ( j=0 ; j&lt;nrow ; ++j )
<a name="l00174"></a>00174                         m[i][j] = &amp;rc[i*nrow*ncol + j*ncol];
<a name="l00175"></a>00175 
<a name="l00176"></a>00176         *mat = m;
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         <span class="keywordflow">return</span> 1;
<a name="l00179"></a>00179 }
<a name="l00180"></a>00180 
<a name="l00182"></a>00182 <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;
<a name="l00183"></a><a class="code" href="RicUtil_8h.html#4dc7947a505653f2512c231d7879f969">00183</a> <span class="keywordtype">void</span> <a class="code" href="RicUtil_8h.html#4dc7947a505653f2512c231d7879f969" title="Template version of 2D matrix memory free routines.">free_matrix3D</a>(T **m)
<a name="l00184"></a>00184 {
<a name="l00185"></a>00185         <span class="comment">// first free linear array </span>
<a name="l00186"></a>00186         <span class="keyword">delete</span> m[0][0];
<a name="l00187"></a>00187         
<a name="l00188"></a>00188         <span class="comment">// free the array of pointers </span>
<a name="l00189"></a>00189         <span class="keyword">delete</span> m[0];
<a name="l00190"></a>00190         <span class="keyword">delete</span> m;
<a name="l00191"></a>00191 }
<a name="l00192"></a>00192 
<a name="l00193"></a>00193 <span class="comment">// functions implemented as defines</span>
<a name="l00194"></a>00194 <span class="preprocessor">#define dist_squ(a,b)   (Dist_squ(&amp;(a),&amp;(b)))</span>
<a name="l00195"></a>00195 <span class="preprocessor"></span><span class="preprocessor">#define point_theta(p)  ((float)atan2((p).y, (p).x))</span>
<a name="l00196"></a>00196 <span class="preprocessor"></span>
<a name="l00197"></a>00197 <span class="comment">// function defines</span>
<a name="l00198"></a>00198 <a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> <a class="code" href="RicUtil_8cpp.html#1b2270cf1d54a22e6bbe2edd86724e83">cart_to_cyl</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> cart);
<a name="l00199"></a>00199 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#718d1996cc315c0770798b6eb3767e48">cyl_to_cart</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> cyl);
<a name="l00200"></a>00200 <a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> <a class="code" href="RicUtil_8cpp.html#a1fa27b21c2117888707c26d840c2a12">cart_to_cyl_deg</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> cart);
<a name="l00201"></a>00201 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#7a6b3c477042e9b5743d98014a5d1662">cyl_to_cart_deg</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> cyl);
<a name="l00202"></a>00202 <a class="code" href="structSphere.html" title="3d point in spherical coordinates">Sphere</a>  <a class="code" href="RicUtil_8cpp.html#be293048f36824c2700fc4ec9348a9ba">cart_to_sphere</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> cart);
<a name="l00203"></a>00203 DSphere  <a class="code" href="RicUtil_8cpp.html#be293048f36824c2700fc4ec9348a9ba">cart_to_sphere</a>(<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> cart);
<a name="l00204"></a>00204 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#91221ddf032711d1073472e12498e2fa">sphere_to_cart</a>(<a class="code" href="structSphere.html" title="3d point in spherical coordinates">Sphere</a> sphere);
<a name="l00205"></a>00205 <a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> <a class="code" href="RicUtil_8cpp.html#91221ddf032711d1073472e12498e2fa">sphere_to_cart</a>(DSphere sphere);
<a name="l00206"></a>00206 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#0b64710c8f93238fd1c94b878bbd182c">dist</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2);
<a name="l00207"></a>00207 <span class="keywordtype">double</span> <a class="code" href="RicUtil_8cpp.html#a2ef6e2c9ccf760a689d019a8b47e903">ddist</a>(<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> p1,<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> p2);
<a name="l00208"></a>00208 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#cabead7577b077418fd56e696e0f1f01">distsqu</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2);
<a name="l00209"></a>00209 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#5fc68f83e23cd5d146e35f1759264369">cyldist</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p1,<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p2);
<a name="l00210"></a>00210 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#8b4f6ede67ddb808284c0967336a3e2c">cyldist2</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p1,<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p2,<span class="keywordtype">float</span> *dval);
<a name="l00211"></a>00211 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#331f705054ee305bb88ec8d94c6b326c">cyldistsqu</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p1,<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> p2);
<a name="l00212"></a>00212 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#b543de2f098a66f2267f3ab5e45aacc5">int_sort</a>(<span class="keywordtype">int</span> a[],<span class="keywordtype">int</span> n);
<a name="l00213"></a>00213 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#146566929be94cd9bcd765e12f676c17" title="comparison routine for float_sort">float_sort</a>(<span class="keywordtype">float</span> a[],<span class="keywordtype">int</span> n);
<a name="l00214"></a>00214 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#b6adffa39743d4872e5b14c62bac6767">theta_sort</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> a[],<span class="keywordtype">int</span> n);
<a name="l00215"></a>00215 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#10402a6f2e73fe668df96644c6578b0d">y_sort</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> a[],<span class="keywordtype">int</span> n);
<a name="l00216"></a>00216 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#b09fe5161f4f95428c7fe4b03252b80e">z_sort</a>(<a class="code" href="structCylind.html" title="3d cylindrical point - float">Cylind</a> a[],<span class="keywordtype">int</span> n);
<a name="l00217"></a>00217 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#b09fe5161f4f95428c7fe4b03252b80e">z_sort</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> a[],<span class="keywordtype">int</span> n);
<a name="l00218"></a>00218 <a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a>  <a class="code" href="RicUtil_8cpp.html#7f59568b00ce133027388027623ddb3b">cross_product</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> pnt[]);
<a name="l00219"></a>00219 <a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a>  <a class="code" href="RicUtil_8cpp.html#7f59568b00ce133027388027623ddb3b">cross_product</a>(<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> pnt[]);
<a name="l00220"></a>00220 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#e903d402a5fa72509ae00da8a711e2e1">dot_product</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a> *v1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a> *v2);
<a name="l00221"></a>00221 <a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a> <a class="code" href="RicUtil_8cpp.html#e1d64046c185cc110c6375b1fd13fcc9">normal_pnt</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p3);
<a name="l00222"></a>00222 <a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> <a class="code" href="RicUtil_8cpp.html#e1d64046c185cc110c6375b1fd13fcc9">normal_pnt</a> (<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> p1, <a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> p2,<a class="code" href="classDPoint.html" title="XYZ double class.">DPoint</a> p3);
<a name="l00223"></a>00223 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#928b1da945af8413e422d1749058d33a">file_exist</a>(<span class="keywordtype">char</span> *filename);
<a name="l00224"></a>00224 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a>* <a class="code" href="RicUtil_8cpp.html#501d630bff638037c3e7be254f1098bf">catrom_curve</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *pin,<span class="keywordtype">int</span> nctrl, <span class="keywordtype">int</span> step_size, <span class="keywordtype">float</span> tension,
<a name="l00225"></a>00225         <span class="keywordtype">int</span> *noutpnts);
<a name="l00226"></a>00226 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#c0b500908ddb016ef5a60608535c5c4d">line_thru_plane</a> (<span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> c, <span class="keywordtype">float</span> d, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p0, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1);
<a name="l00227"></a>00227 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#a45b7ea879e11789ad25cc3e3c6359f9">line_thru_triangle</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t0,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t2,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p0,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *pout);
<a name="l00228"></a>00228 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#385011832092f0b83ee3333232b44d9b">line_intersect_plane</a>(<span class="keywordtype">float</span> a,<span class="keywordtype">float</span> b,<span class="keywordtype">float</span> c,<span class="keywordtype">float</span> d,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p0,
<a name="l00229"></a>00229         <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *pout);
<a name="l00230"></a>00230 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#0cd6b3fb07e4d6fd2101c1de1673532b">equ_plane</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p3,<span class="keywordtype">float</span> *a,<span class="keywordtype">float</span> *b,<span class="keywordtype">float</span> *c,<span class="keywordtype">float</span> *d);
<a name="l00231"></a>00231 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#cb748b408e38b5fd6f57551fdd009328">equ_plane2</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1,<a class="code" href="classPoint.html" title="XYZ floating point class.">Vector</a> n1,<span class="keywordtype">float</span> *a,<span class="keywordtype">float</span> *b,<span class="keywordtype">float</span> *c,<span class="keywordtype">float</span> *d);
<a name="l00232"></a>00232 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#5c3e4f52d6d1561d51e97da7b79ab666">Dist_squ</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *p2);
<a name="l00233"></a>00233 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#c8f7adf4f7926fe3d33c7f318b2e5919">initialize_in_polygon</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *v, <span class="keywordtype">int</span> npnts);
<a name="l00234"></a>00234 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#b01a8ee7f9c5213385c32cff1279214f">in_polygon</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *v, <span class="keywordtype">int</span> npnts, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p);
<a name="l00235"></a>00235 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#bc9102c63f392d8a96756ef4adca4d1e">in_polygon2</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *v, <span class="keywordtype">int</span> n, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p, <span class="keywordtype">int</span> add_pi);
<a name="l00236"></a>00236 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#c948b9c4fcb99b0f5ffb601536bd44d8">interpolate_along_z</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *p, <span class="keywordtype">float</span> z);
<a name="l00237"></a>00237 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#0db5c75ba8a72516e6b2bcfe66b6b182">circle_from_3pnts</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p3, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *cp);
<a name="l00238"></a>00238 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#31ebd4992a60fc518435305db58d64e5">scale_array</a>(<span class="keywordtype">float</span> newMin, <span class="keywordtype">float</span> newMax, <span class="keywordtype">float</span> *array, <span class="keywordtype">int</span> l, <span class="keywordtype">int</span> invert);
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#527aab99cfd92ba88d750f86bf342892">splint</a>(<span class="keywordtype">float</span> xa[],<span class="keywordtype">float</span> ya[],<span class="keywordtype">float</span> y2a[],<span class="keywordtype">int</span> n,<span class="keywordtype">float</span> x,<span class="keywordtype">float</span> *y);
<a name="l00241"></a>00241 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#a6510eb976d100f69e66ab457be35e06">spline</a>(<span class="keywordtype">float</span> x[],<span class="keywordtype">float</span> y[],<span class="keywordtype">int</span> n,<span class="keywordtype">float</span> yp1,<span class="keywordtype">float</span> ypn,<span class="keywordtype">float</span> y2[]);
<a name="l00242"></a>00242 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#d2eb9c676e596100a359aef57b16368c">spline_d</a>(<span class="keywordtype">double</span> *, <span class="keywordtype">double</span> *, <span class="keywordtype">int</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span> *);
<a name="l00243"></a>00243 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#1f18c23b153d51bdedfafda0b50c395e">splint_d</a>(<span class="keywordtype">double</span> *, <span class="keywordtype">double</span> *, <span class="keywordtype">double</span> *, <span class="keywordtype">int</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span> *);
<a name="l00244"></a>00244 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#e5a4ea0ceecad735c30781ece6e9edf8">angle_between_planes</a>(<span class="keywordtype">float</span> a1,<span class="keywordtype">float</span> b1,<span class="keywordtype">float</span> c1,<span class="keywordtype">float</span> a2, <span class="keywordtype">float</span> b2,
<a name="l00245"></a>00245                                                    <span class="keywordtype">float</span> c2);
<a name="l00246"></a>00246 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#3c58acbf6cc84114f931ba99a9e1ae32">dist_point_plane</a> (<span class="keywordtype">float</span> a,<span class="keywordtype">float</span> b,<span class="keywordtype">float</span> c,<span class="keywordtype">float</span> d,<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p0, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *pout);
<a name="l00247"></a>00247 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#340da91d1bd7bd532520aa3269ff78a6">dist_point_line</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> Pnt, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> LineStart, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> LineEnd, <span class="keywordtype">float</span> *Distance, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> &amp;Pout);
<a name="l00248"></a>00248 <span class="keywordtype">double</span> <a class="code" href="RicUtil_8cpp.html#2ecf508d0d6f888ec94deee5ebd546ec">distpntlinespace</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>);
<a name="l00249"></a>00249 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#291bae738a51a1be6ae8b7b005acea7e">area_triangle</a> (<span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> c);
<a name="l00250"></a>00250 <span class="keywordtype">float</span> <a class="code" href="RicUtil_8cpp.html#291bae738a51a1be6ae8b7b005acea7e">area_triangle</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p3);
<a name="l00251"></a>00251 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#656b1d8c3558db2866a5fed2fc7f2025">inside_triangle</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t2, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> t3, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p);
<a name="l00252"></a>00252 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#88d456a3dcc04aa84a4cbf5729b4a453">int_circle_line</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> c, <span class="keywordtype">float</span> r, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p2);
<a name="l00253"></a>00253 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#49a1a8bfd1282f4265a9e52d92867a79">inbetween</a>(<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> lp1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> lp2, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p);
<a name="l00254"></a>00254 <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> <a class="code" href="RicUtil_8cpp.html#dc449de40f5f502c48b1c1f092c62306">line_intersect</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p11, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p12, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p21, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> p22);
<a name="l00255"></a>00255 <span class="keywordtype">int</span> <a class="code" href="RicUtil_8cpp.html#bb5d04e6b343dff1e4067327e17c4b6b">sphere_line_intersection</a> (<a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> center, <span class="keywordtype">float</span> r, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> l1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> l2, 
<a name="l00256"></a>00256                                                           <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *p1, <a class="code" href="classPoint.html" title="XYZ floating point class.">Point</a> *p2);
<a name="l00257"></a>00257 
<a name="l00258"></a>00258 <span class="comment">// NR in C routines</span>
<a name="l00259"></a>00259 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#527aab99cfd92ba88d750f86bf342892">splint</a>(<span class="keywordtype">float</span> xa[],<span class="keywordtype">float</span> ya[],<span class="keywordtype">float</span> y2a[],<span class="keywordtype">int</span> n,<span class="keywordtype">float</span> x,<span class="keywordtype">float</span> *y);
<a name="l00260"></a>00260 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#a6510eb976d100f69e66ab457be35e06">spline</a>(<span class="keywordtype">float</span> x[],<span class="keywordtype">float</span> y[],<span class="keywordtype">int</span> n,<span class="keywordtype">float</span> yp1,<span class="keywordtype">float</span> ypn,<span class="keywordtype">float</span> y2[]);
<a name="l00261"></a>00261 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#1b3234039917d3276cbc5a6d1d31738a">splie2</a>(<span class="keywordtype">float</span> x1a[],<span class="keywordtype">float</span> x2a[],<span class="keywordtype">float</span> **ya,<span class="keywordtype">int</span> m,<span class="keywordtype">int</span> n,<span class="keywordtype">float</span> **y2a);
<a name="l00262"></a>00262 <span class="keywordtype">void</span> <a class="code" href="RicUtil_8cpp.html#9cf1be1b2573f1d30200b8763485f388">splin2</a>(<span class="keywordtype">float</span> x1a[],<span class="keywordtype">float</span> x2a[],<span class="keywordtype">float</span> **ya,<span class="keywordtype">float</span> **y2a,<span class="keywordtype">int</span> m,<span class="keywordtype">int</span> n,
<a name="l00263"></a>00263         <span class="keywordtype">float</span> x1,<span class="keywordtype">float</span> x2,<span class="keywordtype">float</span> *y);
<a name="l00264"></a>00264 
<a name="l00265"></a>00265 
<a name="l00266"></a>00266 <span class="comment">// ---------------------- function error_msg -----------------------</span>
<a name="l00267"></a>00267 <span class="comment">// Darn near everybody calls this one</span>
<a name="l00268"></a>00268 <span class="preprocessor">#ifdef WINDOWS</span>
<a name="l00269"></a>00269 <span class="preprocessor"></span>
<a name="l00271"></a>00271 <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a>(<span class="keywordtype">char</span> *msg)
<a name="l00272"></a>00272 {
<a name="l00273"></a>00273         AfxMessageBox(msg,MB_OK,NULL);
<a name="l00274"></a>00274 }
<a name="l00275"></a>00275 <span class="preprocessor">#else</span>
<a name="l00276"></a>00276 <span class="preprocessor"></span>
<a name="l00278"></a><a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f">00278</a> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="RicUtil_8h.html#6cd2a9d2c4cfb08d06f79bbc593e870f" title="Error message to stderr.">error_msg</a>(<span class="keywordtype">char</span> *msg)
<a name="l00279"></a>00279 {
<a name="l00280"></a>00280         fprintf(stderr,<span class="stringliteral">"%s"</span>,msg);
<a name="l00281"></a>00281 }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 <span class="preprocessor">#endif</span>
<a name="l00284"></a>00284 <span class="preprocessor"></span>
<a name="l00285"></a>00285 <span class="preprocessor">#endif </span><span class="comment">/* _RICUTIL_H */</span>
<a name="l00286"></a>00286 
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Nov 7 10:33:32 2008 for RicUtil by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
